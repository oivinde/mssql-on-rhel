---
- name: Create a VM from a template
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - vmware.vmware_rest
  vars:
    vcenter_hostname:
    api_user:
    api_password:
    template_name:
    new_vm_name:
    datacenter:
    cluster:
    resource_pool:
    datastore:
    num_cpus:
    memory_mb:
    disk_size_gb:

  tasks:
    - name: Use AAP VMware credentials
      ansible.builtin.set_fact:
        vcenter_hostname: '{{ lookup("env", "VMWARE_HOST") }}'
        api_user: '{{ lookup("env", "VMWARE_USER") }}'
        api_pass: '{{ lookup("env", "VMWARE_PASSWORD") }}'

    - name: Clone VM Template
      vmware.vmware_rest.vcenter_vm:
        validate_certs: False
        vcenter_hostname: "{{ vcenter_hostname }}"
        vcenter_password: "{{ api_pass }}"
        vcenter_username: "{{ api_user }}"
      placement:
        cluster: "{{ lookup('vmware.vmware_rest.cluster_moid', 'vm_cluster') }}"
        datastore: "{{ lookup('vmware.vmware_rest.datastore_moid', 'vm_datacenter') }}"
        folder: "{{ lookup('vmware.vmware_rest.folder_moid', 'vm_folder') }}"
        #resource_pool: "{{ lookup('vmware.vmware_rest.resource_pool_moid', 'vm_resourcepool') }}"
        source: "{{ lookup('vmware.vmware_rest.vm_moid', 'vm_template') }}"
      name: "{{ vm_name }}"
      cpu:
        hot_add_enabled: true
        count: "{{ vm_cpu }}"
      memory:
        hot_add_enable: true
        size_MiB: "{{ vm_memory }}"
      disks:
      - size_gb: "{{ vm_disk_size }}"
        type: default
        datastore: "{{ vm_datastore }}"
        guest_customization_spec: "{{ vm_customization_spec }}"
      state: poweredon
      wait_for_ip_address: yes
    register: "{{ vm_name }}"
      
    - name: Pass variables to Ansible controller workflows
      set_stats:
        data:
          vm_name: "{{ vm_name }}"
          vm_cpu: "{{ vm_cpu }}"
          vm_memory: "{{ vm_memory }}"
          vm_disk_size: "{{ vm_disk_size }}"
          vm_datastore: "{{ vm_datastore }}"
