---
- name: Create a VM from a template
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    vcenter_hostname: 
    vcenter_username: 
    vcenter_password: 
    vcenter_validate_certs: false
    template_name: 
    vm_name: 
    vm_folder: 
    vm_resource_pool:
    vm_datastore:
    vm_cluster:
    vm_memory_mb:
    vm_cpu_count:
    vm_disk_gb:

  tasks:
    - name: Use AAP VMware credentials
      ansible.builtin.set_fact:
        vcenter_hostname: '{{ lookup("env", "VMWARE_HOST") }}'
        vcenter_username: '{{ lookup("env", "VMWARE_USER") }}'
        vcenter_password: '{{ lookup("env", "VMWARE_PASSWORD") }}'

    - name: Clone VM Template
      vmware.vmware_rest.vcenter_vm:
        vcenter_hostname: "{{ vcenter_hostname }}"
        vcenter_password: "{{ vcenter_password }}"
        vcenter_username: "{{ vcenter_username }}"
        placement:
          cluster: "{{ lookup('vmware.vmware_rest.cluster_moid', {{ vm_cluster }}) }}"
          datastore: "{{ lookup('vmware.vmware_rest.datastore_moid', {{ vm_datacenter }}) }}"
          folder: "{{ lookup('vmware.vmware_rest.folder_moid', {{ vm_folder }}) }}"
        name: "{{ vm_name }}"
        source: "{{ template_name }}"
        cpu:
          hot_add_enabled: true
          vm_cpu_count: "{{ vm_cpu }}"
        memory:
          hot_add_enable: true
          size_MiB: "{{ vm_memory }}"
        disks:
          - size_gb: "{{ vm_disk_size }}"
            type: default
        
        state: present
      register: vm_name

    - name: Power on the VM
      vmware.vmware_rest.vcenter_vm_power:
        state: start          
        vm: "{{ vm_name }}"

    - name: Wait until my VM is ready
      vmware.vmware_rest.vcenter_vm_tools_info:
        vm: "{{ vm_name }}"
      register: vm_tools_info
      until:
        - vm_tools_info is not failed
        - vm_tools_info.value.run_state == "RUNNING"
      retries: 10
      delay: 5

    - name: Customize the VM
      vmware.vmware_rest.vcenter_vm_guest_customization:
        vm: "{{ vm_name }}"
        global_DNS_settings:
          dns_suffix_list:
            - ekeberg.io
          dns_servers:
            - "192.168.0.100"
        interfaces:
          - adapter:
              ipv4:
                type: DHCP
        configuration_spec:
          linux_config:
            domain: ekeberg.io
            hostname:
              fixed_name: "{{ vm_name }}"
              type: FIXED

      
    - name: Pass variables to Ansible controller workflows
      set_stats:
        data:
          vm_name: "{{ vm_name }}"
          vm_cpu: "{{ vm_cpu }}"
          vm_memory: "{{ vm_memory }}"
          vm_disk_size: "{{ vm_disk_size }}"
          vm_datastore: "{{ vm_datastore }}"
